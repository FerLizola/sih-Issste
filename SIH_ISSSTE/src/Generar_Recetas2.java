import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static javax.swing.JOptionPane.*;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author EdgarUlises
 */
public class Generar_Recetas2 extends javax.swing.JFrame {
    JTable tabla,tabla2;
    ResultSet rs;
    Boolean bandera = false;
    Calendar fecha = new GregorianCalendar();
    
    /**
     * Creates new form Generar_Recetas2
     */
    public Generar_Recetas2() {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Recursos/icono.png"));
        setIconImage(icon);
        this.llenarTabla();
        
    }
    
    
    public void llenarTablaConBusqueda(String cadena){
        DefaultTableModel dfm = new DefaultTableModel();
        tabla = this.jTable1;
        tabla.setModel(dfm);
        
        dfm.setColumnIdentifiers(new Object[]{"Codigo","Nombre Generico","Descripci贸n","Cantidad","Presentaci贸n"});
        Conexion_BD cn = new Conexion_BD();
        
        
            rs = cn.buscarPorNombreMedicamento(cadena);
        
       
        try{
            while(rs.next()){
                dfm.addRow(new Object[]{rs.getString("id_Medicamentos"), rs.getString("NombreGen_Medicamentos"),rs.getString("Descripcion_Medicamento"),rs.getInt("Cantidad_Medicamento"), rs.getString("Presentacion")});
            }
        }catch(Exception e){
            System.out.println("Error al cargar los datos");
        }
    }
   
    int c=1;
    public void llenarTabla(){
        DefaultTableModel dfm = new DefaultTableModel();
        tabla = this.jTable1;
        tabla.setModel(dfm);
        
        dfm.setColumnIdentifiers(new Object[]{"Codigo","Nombre Generico","Descripci贸n","Cantidad","Presentaci贸n"});
        Conexion_BD cn = new Conexion_BD();
        rs = cn.SeleccionarTodoMedicamento();
        try{
            while(rs.next()){
                dfm.addRow(new Object[]{rs.getString("id_Medicamentos"), rs.getString("NombreGen_Medicamentos"),rs.getString("Descripcion_Medicamento"),rs.getInt("Cantidad_Medicamento"), rs.getString("Presentacion")});
            }
        }catch(Exception e){
            System.out.println("Error al cargar los datos");
        }
        
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Buscar: ");

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicamento", "Indicaciones", "Descripcion", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(4, 4, 4)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(58, 58, 58)
                                .addComponent(jButton3)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        this.llenarTablaConBusqueda(jTextField6.getText());
    }//GEN-LAST:event_jTextField6KeyReleased

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "Verifique que los datos sean correctos\n Si ya lo hiso presione si", "Imprimir", JOptionPane.YES_NO_OPTION);
        if(resp==0){
        try{
                        
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection conex=DriverManager.getConnection("jdbc:mysql://db4free.net:3306/sihissste_db", "vmcc", "sih-issste");
                        Statement st = conex.createStatement();
                        st=conex.createStatement();
                        

                            PreparedStatement re = conex.prepareStatement("INSERT INTO RecetaMedica (Fecha_RecMedica,id_HistorialClinico) Values(?,?);");
                            re.setString(1,fecha.get(Calendar.YEAR)+"-"+fecha.get(Calendar.MONTH)+"-"+fecha.get(Calendar.DAY_OF_MONTH));
                            rs=st.executeQuery("SELECT MAX(id_HistorialClinico) FROM HistorialClinico");
                            rs.next();
                            re.setInt(2,rs.getInt("MAX(id_HistorialClinico)"));
                            int n = re.executeUpdate();
           

                            
   
                            //Insertar DetalleReceta
                            for(int i=0;i<jTable2.getRowCount();i++){
                                rs=st.executeQuery("SELECT MAX(id_RecMedica) FROM RecetaMedica");
                                rs.next(); 
                                PreparedStatement dr = conex.prepareStatement("INSERT INTO DetalleRecMed (id_Medicamentos,id_RecMedica,Instrucciones_RecMed,Cantidad_RecMed) Values(?,?,?,?)");
                                dr.setInt(2,rs.getInt("MAX(id_RecMedica)"));
                                dr.setInt(4,Integer.parseInt(jTable2.getValueAt(i, 3).toString()));
                                dr.setString(3,jTable2.getValueAt(i, 1).toString().toUpperCase());
                                rs=st.executeQuery("SELECT id_Medicamentos FROM Medicamentos where Descripcion_Medicamento='"+(String)(jTable2.getValueAt(i,2 )) +"' AND  NombreGen_Medicamentos='"+(String)(jTable2.getValueAt(i, 0))+"'");
                                rs.next();
                                dr.setString(1,rs.getString("id_Medicamentos") );    
                                dr.executeUpdate();
                            }
                            
                            
                        
                        


                    }
                    catch(ClassNotFoundException | SQLException e){
                        e.printStackTrace();        
                    }
        
//--------------------------------------------------------------------------------------------------------------------
        //Generar PDF
        fecha.setTimeZone(TimeZone.getTimeZone("GMT-6"));
        Document documento= new Document();
        try{
            FileOutputStream fichero = new FileOutputStream("C:\\Users\\EdgarUlises\\Desktop\\Carpeta2puntocero\\1\\Receta"+c+".pdf");
            c++;
            PdfWriter writer = PdfWriter.getInstance(documento, fichero);
            //Habre el documento para comenzar a editar
            documento.open();
            
                 //Imagen Isste
                com.itextpdf.text.Image imagen=com.itextpdf.text.Image.getInstance("C:\\Users\\EdgarUlises\\Desktop\\Ing_Soft\\src\\issste.jpeg");
                imagen.scaleToFit(250,250);
                imagen.setAlignment(Chunk.ALIGN_LEFT);
                documento.add(imagen);
            
                //Imagen Recuadro
                com.itextpdf.text.Image imagen1=com.itextpdf.text.Image.getInstance("C:\\Users\\EdgarUlises\\Desktop\\Ing_Soft\\src\\recuadro .png");
                imagen1.scaleToFit(280, 250);
                imagen1.setAbsolutePosition(300, 640);
                documento.add(imagen1);
                
                imagen1.scaleToFit(530, 800);
                imagen1.setAbsolutePosition(50, 330);
                documento.add(imagen1);
                
                //Linea Recta
                com.itextpdf.text.Image imagen2=com.itextpdf.text.Image.getInstance("C:\\Users\\EdgarUlises\\Desktop\\Ing_Soft\\src\\Linea.png");
                imagen2.scaleToFit(490, 400);
                imagen2.setAbsolutePosition(70,570);
                documento.add(imagen2);

                
                imagen2.setAbsolutePosition(70,250);
                documento.add(imagen2);

                PdfContentByte cb = writer.getDirectContent();
                
                //Estilo de letra
                BaseFont bf = BaseFont.createFont(BaseFont.TIMES_ROMAN,BaseFont.CP1252,BaseFont.NOT_EMBEDDED);
                
                //Tama帽o de letra
                cb.setFontAndSize(bf, 10);
            
                //Comienzo para introducir texto
                cb.beginText();
                //Nombre del paciente
                cb.setTextMatrix(320,752);
                cb.showText("Nombre: ");
                
                //RFC
                cb.setTextMatrix(320, 772);
                cb.showText("RFC: ");
                
                //Fecha
                cb.setTextMatrix(70,580);
                cb.showText("Fecha: "+fecha.get(Calendar.DAY_OF_MONTH)+"/"+fecha.get(Calendar.MONTH)+"/"+fecha.get(Calendar.YEAR));
                
                cb.setTextMatrix(80,240);
                cb.showText("Nombre y firma del medico");
                cb.setFontAndSize(bf, 13);
                cb.setTextMatrix(70,260);
                cb.showText("");
                
                
                cb.setTextMatrix(95,680);
                cb.showText("Esta receta no se surtira despues ");
                cb.setTextMatrix(95,660);
                cb.showText("de las 72 Horas de su expedicion");
                
                cb.setTextMatrix(70,550);
                cb.showText("Nombre Medicamento");
                
                cb.setTextMatrix(450,550);
                cb.showText("Cantidad");
                
                cb.setTextMatrix(270,550);
                cb.showText("Indicaciones");

                int tam=510;
                for(int i=0;i<jTable2.getRowCount();i++){
                    cb.setTextMatrix(70,tam);
                    cb.showText((String) jTable2.getValueAt(i,0));
                    cb.setTextMatrix(270,tam);
                    cb.showText((String)jTable2.getValueAt(i, 1));
                    cb.setTextMatrix(450,tam);
                    cb.showText((String) jTable2.getValueAt(i,3));
                    tam+=20;
                }
                    
                
                
            
           //Termina Introduccion de texto
           cb.endText();
            
        documento.close();
        //no prestes atencion a eso xD jiji
        
        
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(Generar_Receta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Generar_Receta.class.getName()).log(Level.SEVERE, null, ex);
        }
        VentanaDoctor v = new VentanaDoctor();
        v.setVisible(true);
        this.dispose();
        }
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
    }//GEN-LAST:event_jTable1MouseClicked
   
    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        DefaultTableModel dfm = (DefaultTableModel) jTable2.getModel();
        Object [] fila=new Object[4];
        tabla=this.jTable1;
        tabla.addMouseListener(new MouseAdapter() {
        @Override
        public void mousePressed(MouseEvent Mouse_evt) {
            JTable table =(JTable) Mouse_evt.getSource();
            Point point = Mouse_evt.getPoint();
            int row = table.rowAtPoint(point);
            
            if (Mouse_evt.getClickCount() == 2) {
                boolean b=false;
                fila[0]=(""+tabla.getValueAt(tabla.getSelectedRow(), 1));
                fila[2]=(""+tabla.getValueAt(tabla.getSelectedRow(), 2));
                for(int i=0;i<jTable2.getRowCount();i++){
                    if(jTable2.getValueAt(i, 0).equals(fila[0]))
                        b=true;  
                }
                if(b==false){
                    Statement st;
                    ResultSet rs=null;
                    
                    dfm.addRow(fila);
                    jTable2.setModel((TableModel) dfm.getValueAt(1,2));
                }
            }
            
        }});
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        DefaultTableModel dfm = (DefaultTableModel) jTable2.getModel();
        Object [] fila=new Object[6];
        tabla=this.jTable2;
        tabla.addMouseListener(new MouseAdapter() {
        @Override
        public void mousePressed(MouseEvent Mouse_evt) {
            JTable table =(JTable) Mouse_evt.getSource();
            Point point = Mouse_evt.getPoint();
            int row = table.rowAtPoint(point);
            
            if (Mouse_evt.getClickCount() == 3) {
                    dfm.removeRow(row);
                    jTable2.setModel((TableModel) dfm.getValueAt(1,2));
            }
            
        }});
    }//GEN-LAST:event_jTable2MousePressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        VentanaDoctor v = new VentanaDoctor();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generar_Recetas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generar_Recetas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generar_Recetas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generar_Recetas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Generar_Recetas2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
